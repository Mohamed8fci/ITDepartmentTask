// <auto-generated />
using System;
using ITDepartmentTask.Dal.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ITDepartmentTask.Dal.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231012035941_v1")]
    partial class v1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ITDepartmentTask.Dal.Models.Device", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("AcquisitionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeviceCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("DeviceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Memo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("DeviceCategoryId");

                    b.ToTable("Devices");
                });

            modelBuilder.Entity("ITDepartmentTask.Dal.Models.DeviceCategory", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("DeviceCategories");
                });

            modelBuilder.Entity("ITDepartmentTask.Dal.Models.PropertyItem", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("DeviceCategoryID")
                        .HasColumnType("int");

                    b.Property<string>("PropertyDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("DeviceCategoryID");

                    b.ToTable("PropertyItems");
                });

            modelBuilder.Entity("ITDepartmentTask.Dal.Models.PropertyValue", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("DeviceID")
                        .HasColumnType("int");

                    b.Property<int>("PropertyItemId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("DeviceID");

                    b.HasIndex("PropertyItemId");

                    b.ToTable("PropertyValues");
                });

            modelBuilder.Entity("ITDepartmentTask.Dal.Models.Device", b =>
                {
                    b.HasOne("ITDepartmentTask.Dal.Models.DeviceCategory", "DeviceCategory")
                        .WithMany()
                        .HasForeignKey("DeviceCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DeviceCategory");
                });

            modelBuilder.Entity("ITDepartmentTask.Dal.Models.PropertyItem", b =>
                {
                    b.HasOne("ITDepartmentTask.Dal.Models.DeviceCategory", null)
                        .WithMany("PropertyItems")
                        .HasForeignKey("DeviceCategoryID");
                });

            modelBuilder.Entity("ITDepartmentTask.Dal.Models.PropertyValue", b =>
                {
                    b.HasOne("ITDepartmentTask.Dal.Models.Device", null)
                        .WithMany("PropertyValues")
                        .HasForeignKey("DeviceID");

                    b.HasOne("ITDepartmentTask.Dal.Models.PropertyItem", "PropertyItem")
                        .WithMany()
                        .HasForeignKey("PropertyItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PropertyItem");
                });

            modelBuilder.Entity("ITDepartmentTask.Dal.Models.Device", b =>
                {
                    b.Navigation("PropertyValues");
                });

            modelBuilder.Entity("ITDepartmentTask.Dal.Models.DeviceCategory", b =>
                {
                    b.Navigation("PropertyItems");
                });
#pragma warning restore 612, 618
        }
    }
}
